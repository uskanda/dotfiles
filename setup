#!/bin/bash
cd $HOME/dotfiles

# MacならHomebrewをインストール
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Detected macOS. Installing Homebrew..."
    if ! command -v brew &> /dev/null; then
        echo "Homebrew is not installed. Installing Homebrew..."
        # Install Homebrew
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo "done."
    else
        echo "Homebrew is already installed. Updating Homebrew..."
        brew update
        echo "done."
    fi
fi

# Update apt package list
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    echo "Detected Linux. Updating package list..."
    if ! command -v apt &> /dev/null; then
        echo "apt is not available. Please update your package list manually."
        exit 1
    fi
    # Update package list
    sudo apt update
    echo "done."
fi

# install chezmoi
# check if chezmoi is already installed
echo "Installing chezmoi..."
if command -v chezmoi &> /dev/null; then
    echo "chezmoi is already installed. Installation skipped."
else
    cd $HOME
    sh -c "$(curl -fsLS get.chezmoi.io/lb)"
    # add chezmoi default bin directory to PATH
    if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
        export PATH="$HOME/.local/bin:$PATH"
    fi
    cd $HOME/dotfiles
fi

# init chezmoi
echo "Initializing chezmoi..."
chezmoi init --source="$HOME/dotfiles" --apply

# install zsh and zinit
echo "Installing Zsh and Zinit..."
# check if zsh is already installed
if command -v zsh &> /dev/null; then
    echo "Zsh is already installed. Installation skipped. if you use MacOS, your default zsh is may not latest version."
else
    echo "Zsh is NOT installed."
    echo "Installing Zsh..."
    # install zsh
    # OSがUbuntu or Macかチェック
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # Macの場合
        echo "Detected macOS. Installing Zsh using Homebrew..."
        if ! command -v brew &> /dev/null; then
            echo "Homebrew is not installed. Please install Homebrew first."
            exit 1
        fi
        brew install zsh
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linuxの場合
        echo "Detected Linux. Installing Zsh using apt..."
        if ! command -v apt &> /dev/null; then
            echo "apt is not available. Please install Zsh manually."
            exit 1
        fi
        # Update package list and install zsh
        echo "Updating package list and installing Zsh..."
        # Use sudo to install zsh
        if ! command -v sudo &> /dev/null; then
            echo "sudo is not available. Please install Zsh manually."
            exit 1
        fi
        # Update package list and install zsh
        echo "Installing Zsh..." 
        sudo apt install -y zsh
        echo "done."
    fi
fi

# check if zinit is already installed
if command -v zinit >/dev/null 2>&1 \
   || [ -d "$HOME/.local/share/zinit/zinit.git" ] \
   || [ -f "$HOME/.zinit/bin/zinit.zsh" ]; then
    echo "zinit is already installed. Installation skipped."
else
    echo "zinit is NOT installed."
    echo "Installing Zinit..."
    bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"
    echo "done."
fi

# change default shell to zsh
# check if zsh is already the default shell
if [ "$SHELL" = "$(which zsh)" ]; then
    echo "Zsh is already the default shell. No changes made."
else
    echo "Changing default shell to Zsh..."
    chsh -s $(which zsh)
    echo "done."
fi

# install starship
echo "Installing Starship..."
# check if starship is already installed
if command -v starship &> /dev/null; then
    echo "Starship is already installed. Installation skipped."
else
    echo "Starship is NOT installed."
    echo "Installing Starship..."
    curl -sS https://starship.rs/install.sh | sh
    echo "done."
fi