# -*- ruby -*-

# require 'autotest/autoupdate'
# require 'autotest/camping'
# require 'autotest/cctray'
# require 'autotest/emacs'
# require 'autotest/email_notify'
# require 'autotest/fixtures'
require 'autotest/growl'
# require 'autotest/heckle'
# require 'autotest/html_report'
# require 'autotest/jabber_notify'
# require 'autotest/kdenotify'
# require 'autotest/menu'
# require 'autotest/migrate'
# require 'autotest/notify'
# require 'autotest/pretty'
# require 'autotest/rcov'
# require 'autotest/redgreen'
# require 'autotest/screen'
# require 'autotest/shame'
# require 'autotest/snarl'
# require 'autotest/timestamp'

# Autotest::AutoUpdate.sleep_time = o
# Autotest::AutoUpdate.update_cmd = o
# Autotest::CCTray.project_name = name
# Autotest::Emacs.command = o
# Autotest::EmailNotify.smtp_settings = o
# Autotest::EmailNotify.from = o
# Autotest::EmailNotify.recipients = o
# Autotest::EmailNotify.use_svn = o
# Autotest::EmailNotify.report_every_run = o
# Autotest::Growl.growl title, msg, pri = 0
# Autotest::JabberNotify.recipients = o
# Autotest::JabberNotify.account = o
# Autotest::JabberNotify.password = o
# Autotest::JabberNotify.use_svn = o
# Autotest::JabberNotify.report_every_run = o
# Autotest::RCov.pattern = o
# Autotest::Shame.chat_app = o
# Autotest::Snarl.snarl title, msg, ico = nil

module Autotest::Growl
  def self.growl title, msg, img="~/.rails_ok.png", pri=0, sticky=""
    system "growlnotify -n autotest --image #{img} -p #{pri} -m #{msg.inspect} #{title} #{sticky}"
  end
  
  Autotest.add_hook :ran_command do |at|
    results = [at.results].flatten.join("\n")
    output = results.slice(/(\d+)\s+examples?,\s*(\d+)\s+failures?(,\s*(\d+)\s+not implemented)?/)
    if output
      if $~[2].to_i > 0
        growl "Test Results", "#{output}", "~/.rails_fail.png", 2
        `say test failed!`
      else
        growl "Test Results", "#{output}", "~/.rails_ok.png"
        `say test successed!`
      end
    end
  end
end

class Autotest
  def self.clear_hook
    HOOKS[:red].clear
    HOOKS[:green].clear
    HOOKS[:all_good].clear
  end
end
Autotest.clear_hook
